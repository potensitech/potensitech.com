name: Schedule Management

on:
  schedule:
    # Pattern 1: schedule > keyword > article > image > deploy > index (5x daily)
    - cron: '0 0 * * *'    # 00:00 UTC - with keywords
    - cron: '48 4 * * *'   # 04:48 UTC - with keywords  
    - cron: '36 9 * * *'   # 09:36 UTC - with keywords
    - cron: '24 14 * * *'  # 14:24 UTC - with keywords
    - cron: '12 19 * * *'  # 19:12 UTC - with keywords
    
    # Pattern 2: schedule > article > image > deploy > index (5x daily)
    - cron: '30 2 * * *'   # 02:30 UTC - articles only
    - cron: '18 6 * * *'   # 06:18 UTC - articles only
    - cron: '6 11 * * *'   # 11:06 UTC - articles only
    - cron: '54 16 * * *'  # 16:54 UTC - articles only
    - cron: '42 21 * * *'  # 21:42 UTC - articles only
    
  workflow_dispatch:
    inputs:
      workflow_type:
        description: 'Select workflow pattern to run'
        required: true
        default: 'full'
        type: choice
        options:
          - 'full'        # keyword > article > image > deploy > index
          - 'articles'    # article > image > deploy > index
          - 'keywords'    # keywords only
          - 'deploy'      # deploy > index only

concurrency:
  group: schedule-management-${{ github.ref }}
  cancel-in-progress: false

jobs:
  determine-workflow:
    runs-on: ubuntu-latest
    outputs:
      workflow_type: ${{ steps.determine.outputs.workflow_type }}
      run_keywords: ${{ steps.determine.outputs.run_keywords }}
      
    steps:
      - name: Determine workflow type
        id: determine
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger - use selected option
            WORKFLOW_TYPE="${{ github.event.inputs.workflow_type }}"
            echo "Manual trigger detected - using workflow type: $WORKFLOW_TYPE"
          else
            # Scheduled trigger - determine by time with tolerance
            CURRENT_HOUR=$(date +%H)
            CURRENT_MINUTE=$(date +%M)
            
            # Remove leading zeros to avoid octal interpretation issues
            CURRENT_HOUR=$((10#$CURRENT_HOUR))
            CURRENT_MINUTE=$((10#$CURRENT_MINUTE))
            
            # Convert to total minutes for easier comparison (0-1439 range)
            CURRENT_TOTAL_MIN=$((CURRENT_HOUR * 60 + CURRENT_MINUTE))
            
            echo "Current time: ${CURRENT_HOUR}:$(printf '%02d' $CURRENT_MINUTE) UTC (total minutes: $CURRENT_TOTAL_MIN)"
            
            # Define Pattern 1 schedules with ±6 minute tolerance
            # This accounts for GitHub Actions scheduling delays
            WORKFLOW_TYPE="articles"  # Default to Pattern 2
            PATTERN_DETECTED="Pattern 2 (articles only)"
            
            # Pattern 1 time windows (with tolerance):
            # 00:00 UTC (0 min) -> 1434-1440 or 0-6 minutes (handle day rollover)
            # 04:48 UTC (288 min) -> 282-294 minutes
            # 09:36 UTC (576 min) -> 570-582 minutes  
            # 14:24 UTC (864 min) -> 858-870 minutes
            # 19:12 UTC (1152 min) -> 1146-1158 minutes
            
            if [[ ($CURRENT_TOTAL_MIN >= 1434 && $CURRENT_TOTAL_MIN <= 1439) || \
                  ($CURRENT_TOTAL_MIN >= 0 && $CURRENT_TOTAL_MIN <= 6) ]]; then
              WORKFLOW_TYPE="full"
              PATTERN_DETECTED="Pattern 1 (00:00 UTC window - with keywords)"
            elif [[ $CURRENT_TOTAL_MIN -ge 282 && $CURRENT_TOTAL_MIN -le 294 ]]; then
              WORKFLOW_TYPE="full"
              PATTERN_DETECTED="Pattern 1 (04:48 UTC window - with keywords)"
            elif [[ $CURRENT_TOTAL_MIN -ge 570 && $CURRENT_TOTAL_MIN -le 582 ]]; then
              WORKFLOW_TYPE="full"
              PATTERN_DETECTED="Pattern 1 (09:36 UTC window - with keywords)"
            elif [[ $CURRENT_TOTAL_MIN -ge 858 && $CURRENT_TOTAL_MIN -le 870 ]]; then
              WORKFLOW_TYPE="full"
              PATTERN_DETECTED="Pattern 1 (14:24 UTC window - with keywords)"
            elif [[ $CURRENT_TOTAL_MIN -ge 1146 && $CURRENT_TOTAL_MIN -le 1158 ]]; then
              WORKFLOW_TYPE="full"
              PATTERN_DETECTED="Pattern 1 (19:12 UTC window - with keywords)"
            fi
            
            echo "Detected: $PATTERN_DETECTED"
          fi
          
          # Set outputs
          echo "workflow_type=$WORKFLOW_TYPE" >> $GITHUB_OUTPUT
          
          # Determine if keywords should run
          if [[ "$WORKFLOW_TYPE" == "full" || "$WORKFLOW_TYPE" == "keywords" ]]; then
            echo "run_keywords=true" >> $GITHUB_OUTPUT
            RUN_KEYWORDS_TEXT="true"
          else
            echo "run_keywords=false" >> $GITHUB_OUTPUT
            RUN_KEYWORDS_TEXT="false"
          fi
          
          echo ""
          echo "=== WORKFLOW DETERMINATION SUMMARY ==="
          echo "Event Type: ${{ github.event_name }}"
          echo "Workflow Type: $WORKFLOW_TYPE"
          echo "Run Keywords: $RUN_KEYWORDS_TEXT"
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            echo "Current Time: ${CURRENT_HOUR}:$(printf '%02d' $CURRENT_MINUTE) UTC"
            echo "Detection Logic: Time-based with ±6 minute tolerance"
          fi
          echo "========================================"

  trigger-keywords:
    needs: determine-workflow
    if: needs.determine-workflow.outputs.run_keywords == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger keywords generation
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-keywords-generation
          client-payload: |
            {
              "scheduled_trigger": true,
              "workflow_type": "${{ needs.determine-workflow.outputs.workflow_type }}",
              "source": "schedule",
              "trigger_time": "${{ github.event.schedule }}",
              "run_number": "${{ github.run_number }}"
            }

      - name: Log keywords trigger
        run: |
          echo "Keywords generation triggered successfully"
          echo "Workflow Type: ${{ needs.determine-workflow.outputs.workflow_type }}"
          echo "This will start the chain: keywords -> articles -> images -> deploy -> index"

  trigger-articles-direct:
    needs: determine-workflow
    if: needs.determine-workflow.outputs.workflow_type == 'articles'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger articles generation directly
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-articles-generation
          client-payload: |
            {
              "scheduled_trigger": true,
              "workflow_type": "articles",
              "source": "schedule-direct",
              "trigger_time": "${{ github.event.schedule }}",
              "run_number": "${{ github.run_number }}"
            }

      - name: Log articles trigger
        run: |
          echo "Articles generation triggered successfully"
          echo "Workflow Type: articles"
          echo "This will start the chain: articles -> images -> deploy -> index"

  trigger-deploy-only:
    needs: determine-workflow
    if: needs.determine-workflow.outputs.workflow_type == 'deploy'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Hugo deploy directly
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-hugo-deploy
          client-payload: |
            {
              "scheduled_trigger": true,
              "workflow_type": "deploy",
              "source": "schedule-direct",
              "trigger_time": "${{ github.event.schedule }}",
              "run_number": "${{ github.run_number }}"
            }

      - name: Log deploy trigger
        run: |
          echo "Hugo deploy triggered successfully"
          echo "Workflow Type: deploy"
          echo "This will start the chain: deploy -> index"
